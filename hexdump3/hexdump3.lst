     1                                      ;    Run it this way:
     2                                      ;    
     3                                      ;    hexdump < (input file)
     4                                      ;
     5                                      ;    Build using these commands:
     6                                      ;    
     7                                      ;    nasm -f elf64 -g -F stabs hexdump.asm -l hexdump.asm
     8                                      ;    ld -o hexdump hexdump.o
     9                                      
    10                                  section .bss
    11                                  
    12                                      BUFFLEN equ 10              ;16 len buffer
    13 00000000 <res Ah>                Buff: resb BUFFLEN              ;text buffer
    14                                  
    15                                  section .data
    16                                  section .text
    17                                  
    18                                      extern Clearline, DumpChar,Printline
    19                                   
    20                                  global _start
    21                                  
    22                                      ;-------------------------------------------------------------------------
    23                                      ; main program starts here
    24                                      ;-------------------------------------------------------------------------
    25                                  
    26                                  _start:
    27 00000000 90                          nop                         ;gdb happy noises
    28                                  
    29                                      ;initialization before loop Scan starts here
    30 00000001 31F6                        xor esi,esi                 ;clear esi
    31                                      
    32                                  Read:
    33 00000003 B803000000                  mov eax,3                   ;specify sys_read call
    34 00000008 BB00000000                  mov ebx,0                   ;specify file descriptor 0,stdin
    35 0000000D B9[00000000]                mov ecx,Buff                ;store buffer address
    36 00000012 BA0A000000                  mov edx,BUFFLEN             ;number of character to read
    37 00000017 CD80                        int 80h                     ;call sys_read
    38                                      
    39 00000019 89C5                        mov ebp,eax                 ;save number of character for later use
    40 0000001B 83F800                      cmp eax,0                   ;if eax=0 it reached EOF
    41 0000001E 742E                        je Done                     ;exit
    42                                      
    43 00000020 31C9                        xor ecx,ecx                 ;clear xor register
    44                                  
    45                                      ;go through buffer and convert binary value to hexdigits
    46                                  Scan:
    47 00000022 31C0                        xor eax,eax                 ;clear eax
    48 00000024 8A81[00000000]              mov al,byte[Buff+ecx]       ;get a byte from buffer to al
    49 0000002A 89F2                        mov edx,esi                 ;copy total count to edx
    50 0000002C 83E20F                      and edx,0000000fh           ;mask lowest bit for character counter
    51 0000002F E8(00000000)                call DumpChar               ;call the poke procedure
    52                                  
    53                                      ;bump to next character till it's done
    54 00000034 46                          inc esi                     ;increment character procedure
    55 00000035 41                          inc ecx                     ;increment buffer pointer
    56 00000036 39E9                        cmp ecx,ebp                 ;compare with number of characters
    57 00000038 73C9                        jae Read                    ;if we got the buffer go back
    58                                  
    59 0000003A F7C60F000000                test esi,0000000fh          ;test lower 4 bits of counter
    60 00000040 75E0                        jnz Scan                    ;Scan if not zero
    61 00000042 E8(00000000)                call Printline              ;call printline
    62 00000047 E8(00000000)                call Clearline              ;clear the line
    63 0000004C EBD4                        jmp Scan                    ;next Scan for buffer
    64                                  
    65                                  Done:
    66 0000004E E8(00000000)                call Printline              ;print any lefovers
    67 00000053 B801000000                  mov eax,1                   ;code for exit syscall
    68 00000058 BB00000000                  mov ebx,0                   ;return code for 0
    69 0000005D CD80                        int 80h                     ;make kernel call
