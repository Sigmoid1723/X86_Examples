     1                                  [section .data]
     2                                  
     3 00000000 596F7572204E756D62-     Nstring: db "Your Number is: %x",10,0
     3 00000009 65722069733A202578-
     3 00000012 0A00               
     4 00000014 2D3031323334353637-     Cstring: db "-0123456789qwertyuiopasdfghjklzxcvbnmQWERTYUIOPASDFGHJKLZXCVBNM@"
     4 0000001D 383971776572747975-
     4 00000026 696F70617364666768-
     4 0000002F 6A6B6C7A786376626E-
     4 00000038 6D5157455254595549-
     4 00000041 4F504153444647484A-
     4 0000004A 4B4C5A584356424E4D-
     4 00000053 40                 
     5                                  
     6                                  [section .bss]
     7                                  
     8 00000000 ????????                    RTbuff resb 4
     9                                      Bufflen equ $-RTbuff
    10                                  
    11                                  [section  .text]
    12                                  
    13                                  extern rand
    14                                  extern srand
    15                                  extern printf
    16                                  extern time
    17                                  extern puts
    18                                  global main
    19                                      
    20                                  pull32:    
    21 00000000 B900000000                  mov ecx,0                   ;for 31-bit random number we don't shift since wa want all 32 bits
    22 00000005 E8(00000000)                call rand                   ;call rand function
    23 0000000A C3                          ret
    24                                  pull6:    
    25 0000000B E8(00000000)                call rand                   ;call rand function
    26 00000010 C1E01A                      shl eax,26                  ;take the last 6 bytes only
    27 00000013 C1E81A                      shr eax,26                  ;take the last 6 bytes only
    28                                      
    29 00000016 C3                          ret                         ;go home
    30                                  
    31                                  main:
    32 00000017 55                          push ebp                    ;create frame
    33 00000018 89E5                        mov ebp,esp                 ;save stack pointer
    34 0000001A 53                          push ebx                    ;save all register
    35 0000001B 56                          push esi
    36 0000001C 57                          push edi
    37                                  
    38                                  ;; boiler plate above
    39                                  
    40 0000001D 6A00                        push dword 0                ;pass null pointer
    41 0000001F E8(00000000)                call time                   ;call time function
    42 00000024 83C404                      add esp,4                   ;clear stack
    43                                  
    44 00000027 50                          push eax                    ;push the time we recived
    45 00000028 E8(00000000)                call srand                  ;call srand function
    46 0000002D 83C404                      add esp,4                   ;clears stack
    47                                  
    48 00000030 E8CBFFFFFF                  call pull32                 ;call the pull32
    49 00000035 50                          push eax                    ;call whatever number we got for print
    50 00000036 68[00000000]                push Nstring                ;pass string
    51 0000003B E8(00000000)                call printf                 ;call printf
    52 00000040 83C408                      add esp,8                   ;clear stack
    53                                  
    54 00000043 6A00                        push dword 0                ;pass null pointer
    55 00000045 E8(00000000)                call time                   ;call time function
    56 0000004A 83C404                      add esp,4                   ;clear stack
    57                                  
    58 0000004D 50                          push eax                    ;push the time we recived
    59 0000004E E8(00000000)                call srand                  ;call srand function
    60 00000053 83C404                      add esp,4                   ;clears stack
    61                                  
    62 00000056 BB04000000                  mov ebx,Bufflen             ;put length to ebx
    63                                  Charloop:
    64 0000005B 4B                          dec ebx                     ;decrement so we can add since base 0
    65 0000005C E8AAFFFFFF                  call pull6                  ;get 6 digit random number
    66 00000061 8A88[14000000]              mov cl,[eax+Cstring]        ;get that value
    67 00000067 888B[00000000]              mov [ebx+RTbuff],cl         ;put that in buffer
    68 0000006D 83FB00                      cmp ebx,0                   ;check if ebx is 0
    69 00000070 75E9                        jne Charloop                ;jump till not 0
    70                                      
    71 00000072 68[00000000]                push RTbuff                 ;push buffer address
    72 00000077 E8(00000000)                call puts                   ;call puts to display
    73 0000007C 83C404                      add esp,4                   ;clear stack
    74                                      
    75                                  ;;boiler plate below
    76                                  
    77 0000007F 5F                          pop edi                     ;restore registers
    78 00000080 5E                          pop esi
    79 00000081 5B                          pop ebx
    80 00000082 89EE                        mov esi,ebp                 ;put pointer end of stack frame
    81 00000084 5D                          pop ebp                     ;destroy frame
    82 00000085 C3                          ret                         ;return to linux
