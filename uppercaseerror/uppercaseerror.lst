     1                                  section .bss
     2                                  
     3                                      Bufflen equ 1024            ;buffer lenght 1024 bytes
     4 00000000 <res 400h>                  Buff: resb Bufflen              ;reserve bufflen bytes
     5                                  
     6                                  section .data
     7                                  
     8 00000000 4572726F7220696E20-         ErrorRead: db "Error in reading file"
     8 00000009 72656164696E672066-
     8 00000012 696C65             
     9                                      EReadlen equ $-ErrorRead
    10 00000015 4572726F7220696E20-         ErrorWrite: db "Error in writing file"
    10 0000001E 77726974696E672066-
    10 00000027 696C65             
    11                                      EWritelen equ $-ErrorWrite
    12                                  
    13                                  section .text
    14                                  
    15                                  global _start
    16                                  
    17                                  _start:
    18 00000000 90                          nop                         ;keep gdb happy
    19                                  
    20                                      ;read buffer full of text form stdin
    21                                  
    22                                  Read:
    23 00000001 B803000000                  mov eax,3                   ;specify sys_read call
    24 00000006 BB00000000                  mov ebx,0                   ;specify file descripter 0:stdin
    25                                      ; mov ebx,999                   ;Error checking
    26 0000000B B9[00000000]                mov ecx,Buff                ;pass offset of the buffer to read through(address)
    27 00000010 BA00040000                  mov edx,Bufflen             ;number of bytes i want to read
    28 00000015 CD80                        int 80h                     ;calls sys_read
    29                                      ; cmp eax,-1                  ;check read return faliure
    30 00000017 83F800                      cmp eax,0                  ;check read return faliure
    31                                      ; jb ErrorReadMSG                  ;jump to the error part of code
    32 0000001A 7C44                        jl ErrorReadMSG                  ;jump to the error part of code
    33                                  
    34                                  Copy:
    35 0000001C 89C6                        mov esi,eax                 ;copy sys_read return value for safekeeping
    36 0000001E 83F800                      cmp eax,0                   ;if eax=0,sys_read reached EOF
    37 00000021 746D                        je Done                     ;jump if equal to compare
    38                                  
    39                                      ;setup register to process buffer steps
    40 00000023 89F1                        mov ecx,esi                 ;place the number of bytes read into the stack
    41 00000025 BD[00000000]                mov ebp,Buff                ;place address of the buffer into ebp
    42 0000002A FFCD                        dec ebp                     ;adjust count to offset
    43                                  
    44                                      ;Go through buffer and covert lowercase to uppercase
    45                                  
    46                                  Scan:
    47                                      ; dec ecx
    48 0000002C 67807C0D0061                cmp byte [ebp+ecx],61h      ;compare with lowercase 'a'
    49 00000032 720E                        jb Next                     ;jump if below
    50 00000034 67807C0D007A                cmp byte [ebp+ecx],7ah      ;compare with lowercase 'z'
    51 0000003A 7706                        ja Next                     ;jump if above
    52 0000003C 67806C0D0020                sub byte [ebp+ecx],20h           ;subtarcact the 20h form lowercase to reach uppercase
    53                                  
    54                                  Next:
    55 00000042 FFC9                        dec ecx                     ;Decrement counter
    56                                      ; cmp ecx,0
    57 00000044 75E6                        jnz Scan                    ;jump till it reaches to zero
    58                                  
    59                                      ;write the buffer full of processed text
    60                                  
    61                                  Write:
    62 00000046 B804000000                  mov eax,4                   ;specify sys_write call
    63                                      ; mov ebx,1                   ;specify file descripter 1, stdin
    64 0000004B BBE7030000                  mov ebx,999                   ;Error checking
    65 00000050 B9[00000000]                mov ecx,Buff                ;where we want to write
    66 00000055 89F2                        mov edx,esi                 ;pass the number of bytes data in the buffer
    67 00000057 CD80                        int 80h                     ;call sys_write
    68                                      ; cmp eax,-1                  ;if there are error in write file
    69 00000059 83F800                      cmp eax,0                  ;if there are error in write file
    70                                      ; jb ErrorWriteMSG            ;if error it jumps to print write msg
    71 0000005C 7C1A                        jl ErrorWriteMSG            ;if error it jumps to print write msg
    72 0000005E EBA1                        jmp Read                    ;jmp to read more characters
    73                                  
    74                                      ;now its done let's finish
    75                                  
    76                                  ErrorReadMSG:
    77                                      ; cmp eax,-10                 ;assumig sys_read has erro upto -10 (current error gives value -9)
    78                                      ; jb Copy                     ;jump to copying value
    79 00000060 B804000000                  mov eax,4                   ;specify sys_write call
    80 00000065 BB01000000                  mov ebx,1                   ;specify file descripter 1, stdin
    81 0000006A B9[00000000]                mov ecx,ErrorRead           ;add address to ecx
    82 0000006F BA15000000                  mov edx,EReadlen            ;read error lenght
    83 00000074 CD80                        int 80h                     ;call sys_write
    84 00000076 EB18                        jmp Done                    ;exit
    85                                  
    86                                  ErrorWriteMSG:
    87                                      ; cmp eax,-10                 ;assumig sys_read has erro upto -10 (current error gives value -9)
    88                                      ; jb Copy                     ;jump to copying value
    89 00000078 B804000000                  mov eax,4                   ;specify sys_write call
    90 0000007D BB01000000                  mov ebx,1                   ;specify file descripter 1, stdin
    91 00000082 B9[15000000]                mov ecx,ErrorWrite           ;add address to ecx
    92 00000087 BA15000000                  mov edx,EWritelen            ;read error lenght
    93 0000008C CD80                        int 80h                     ;call sys_write
    94 0000008E EB00                        jmp Done                    ;exit
    95                                  
    96                                  Done:
    97 00000090 B801000000                  mov eax,1                   ;specify sys_exit call
    98 00000095 BB00000000                  mov ebx,0                   ;specify sys_exit return 0
    99 0000009A CD80                        int 80h                     ;call sys_exit
   100                                  
